qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
library(ggplot2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
install.packages("ggplot2")
install.packages("slidify")
install.packages("KernSmooth")
libray(KernSmooth)
library(KernSmooth)
find.package("devtool")
install.packages("devtool")
find_rtools()
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
x<-c(4, TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[[2]]
x[2]
x<1:4
x<-1:4
y<-2:3
x+y
x <- c(3, 5, 1, 10, 12, 6)
x[x<6]<- 0
x
setwd("~/coursera/02. R Programming/assign 01")
read.csv("hw1_data")
read.csv("hw1_data.csv")
csv <- read.csv("hw1_data.csv")
names(csv)
head(csv, 2)
num(csv)
length(csv)
rows(csv)
row(csv)
tail(csv,2)
csv[47]
csv[[47]]
csv[47,]
csv[1,]
csv[,1]
os.na(csv[,1])
is.na(csv[,1])
is.na(csv[,1])==TRUE
is.na(csv[,1])
sum(is.na(csv[,1]))
mean()
mean(csv[,1])
colMeans(csv[,1], na.rm=TRUE)
mean(as.numeric(csv[,1]), na.rm=TRUE)
head(csv, 2)
csv[,1] > 31
ozone <- csv[,1] > 31
temp <- csv[,4] > 90
bool <- ozone*temp
csv[bool]
csv[bool]
csv[,2][bool]
head(csv, 2)
ozone <- csv[,1] > 31
temp <- csv[,4] > 90
print ozone
print ozone
print
print(ozone)
print(temp)
mean(csv[,2][bool])
mean(as.numeric(csv[,2][bool]))
csv[,2][bool]
ozone <- csv[,1] > 31
temp <- csv[,4] > 90
bool <- ozone*temp
mean(as.numeric(csv[,2][bool]))
csv[,2][bool]
print(ozone)
print(temp)
print(bool)
bool[is.na(bool)]<-0
print(bool)
csv[,2][bool]
mean(as.numeric(csv[,2][bool]))
bool[is.na(bool)]<-FALSE
print(bool)
bool <- ozone*temp
bool[is.na(bool)]<-FALSE
print(bool)
ozone <- csv[,1] > 31
temp <- csv[,4] > 90
print(ozone)
print(temp)
bool <- ozone*temp
bool[is.na(bool)]<-FALSE
print(bool)
csv[,2][as.boolean(bool)]
csv[,2][ozone & temp]
mean(result)
result <- csv[,2][ozone & temp]
mean(result)
mean(result, na.rm=TRUE)
head(csv,1)
csv[,4][csv[,5]==6]
mean(csv[,4][csv[,5]==6])
max(csv[,1][csv[,5]==5])
max(as.numeric(csv[,1][csv[,5]==5]))
csv[,1][csv[,5]==5]
max(2,1)
max(csv[,1][csv[,5]==5], na.rm=TRUE)
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
install.packages("swirl")
x <- 1:10
if(x > 5) {
x <- 0
}
library(swirl)
rm(list=ls())
swirl()
install_from_swirl("R Programming")
swirl()
install_from_swirl("R Programming")
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
swirl()
5+7
x<5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
list.files(recursive = TRUE)
args(list.files)
old.dir <- getwd()
mkdir testdir
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
dir.create("testdir2")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3", recursive=TRUE)
dir.rm(testdir2)
dir.delete(testdir2)
dir.remove(testdir2)
unlink("testdir2")
unlink("testdir2", recursive=TRUE)
cd..
setwd("..")
setwd(old.dir)
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
?':'
seq(1:20)
seq(1,20)
seq(1,10, by=0.5)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq<-seq(5,10, length=30)
length(my_seq)
1:lenth(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vext >= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "boon")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello","world!",sep=" ")
paste(1:3, c("x","y","z"), sep="")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<- sample(c(y,z), 100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
setwd("~/coursera/02. R Programming")
setwd("~/coursera/02. R Programming/assign 01/specdata")
setwd("~/coursera/02. R Programming/assign 01")
read.csv("specdata/1.csv")
read.csv("specdata/001.csv")
x<-read.csv("specdata/001.csv")
read.csv()
head(x,1)
print(c(1,2))
print(paste(1,2))
print(paste(1:2))
print(paste(1:2, seq=""))
print(paste(1:2))
paste(1:2)
paste(1,1)
paste(1,1,seq="")
paste(1,1,seq=" ")
paste("specdata",001,".csv",seq="")
paste("specdata",001,".csv",collapse=TRUE)
paste("specdata",001,".csv",collapse="")
paste("specdata",001,".csv",collapse='')
paste("specdata",001,".csv",collapse='', sep='')
paste("specdata",sprintf("%03d",1),".csv",collapse='', sep='')
monitor_file <- read.csv(paste(directory,sprintf("%03d", i),".csv",seq='',collapse=''))
paste("specdata",sprintf("%03d",1"100"),".csv",collapse='', sep='')
paste("specdata",sprintf("%03d",1:3),".csv",collapse='', sep='')
paste("specdata",sprintf("%03d.csv",1:3),collapse='', sep='')
paste("specdata",sprintf("%03d.csv",1:3),collapse='', sep='/')
filename <- sprintf("%03d.csv", 1:2)
filename
pollutantmean("specdata",id = 1:2)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
filenames <- sprintf("%03d.csv", id)
monitor_file <- read.csv(paste(directory,filenames,seq='/',collapse=''))
head(monitor_file,1)
}
pollutantmean("specdata",id = 1:2)
