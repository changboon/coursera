qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
library(ggplot2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
install.packages("ggplot2")
install.packages("slidify")
install.packages("KernSmooth")
libray(KernSmooth)
library(KernSmooth)
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
source('~/coursera/03. Obtaining and Cleaning Data/quiz 03/quiz03.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(mergedData)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(gdp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(gdp)
source('~/.active-rstudio-document', echo=TRUE)
View(gdp)
View(mergedData)
is.na(mergedData$v4)
mergedData$v4
is.na(mergedData$V4)
mergedData[!is.na(mergedData$V4)]
mergedData[!is.na(mergedData$V4),]
mergedData <- mergedData[!is.na(mergedData$V4),]
View(mergedData)
mergedData <- mergedData[!is.na(mergedData$V4) && !is.na(mergedData$V2),]
View(mergedData)
mergedData = merge(gdp,fedstats,by.x="V1",by.y="CountryCode",all=TRUE)
mergedData <- mergedData[!is.na(mergedData$V4) && !is.na(mergedData$V2),]
mergedData = merge(gdp,fedstats,by.x="V1",by.y="CountryCode",all=TRUE)
mergedData <- mergedData[!is.na(mergedData$V4),]
!is.na(mergedData$V2)
mergedData <- mergedData[!is.na(mergedData$V2),]
View(mergedData)
mergedData <- mergedData[order(-V2)]
mergedData <- mergedData[order(-mergedData$V2)]
mergedData <- mergedData[order(-mergedData$V2),]
View(mergedData)
mergedData[13,]
mergedData[13,1]
mergedData[13,2]
mergedData[13,3]
mergedData[13,4]
highIncomeOECD <- mergedData[mergedData$Income.Group == "High income: OECD"]
highIncomeOECD <- mergedData[mergedData$Income.Group == "High income: OECD",]
highIncomeNonOECD <- mergedData[mergedData$Income.Group == "High income: nonOECD",]
View(highIncomeNonOECD)
sum(is.na(mergedData$V4))
sum(is.na(highIncomeOECD$V4))
mergedData = merge(gdp,fedstats,by.x="V1",by.y="CountryCode",all=TRUE)
mergedData <- mergedData[!is.na(mergedData$V4),]
mergedData <- mergedData[!is.na(mergedData$V2),]
mergedData <- mergedData[order(-mergedData$V2),]
sum(is.na(mergedData$V4))
highIncomeOECD <- mergedData[mergedData$Income.Group == "High income: OECD",]
mean(highIncomeOECD$V2,na.rm=TRUE)
mean(highIncomeNonOECD$V2,na.rm=TRUE)
library(Hmisc)
install.packages("Hmisc")
install.packages("Hmisc")
mergedData$GDPGroups = cut2(mergedData$V2,g=5)
library(Hmisc)
mergedData$GDPGroups = cut2(mergedData$V2,g=5)
table(mergedData$zipGroups)
View(gdp)
View(mergedData)
table(mergedData$GDPGroups)
table(mergedData$GDPGroups, mergedData$Income.Group)
View(mergedData)
mergedData[13,4]
summary(mergedData)
str(mergedData)
strsplit(names(acs),"wgtp")
source('~/.active-rstudio-document', echo=TRUE)
strsplit(names(acs),"wgtp")[123,]
strsplit(names(acs),"wgtp")[123]
View(gdp)
if (!file.exists("./data/GDP.csv")) {
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./data/GDP.csv")
}
gdp <- data.frame(read.csv("./data/GDP.csv",skip=5,header=FALSE, nrows=215))
gsub(gdp$V5, "," "")
gsub(gdp$V5, ",", "")
View(gdp)
gsub(",", "", gdp$V5)
View(gdp)
mean(as.numeric(gdp_num), na.rm=TRUE)
gdp_num <- gsub(",", "", gdp$V5)
mean(as.numeric(gdp_num), na.rm=TRUE)
grep("^United",gdp$V4)
if (!file.exists("./data/Fedstats_country.csv")) {
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, destfile = "./data/Fedstats_country.csv")
}
fedstats <- data.frame(read.csv("./data/Fedstats_country.csv"))
mergedData = merge(gdp,fedstats,by.x="V1",by.y="CountryCode",all=TRUE)
mergedData <- mergedData[!is.na(mergedData$V4),]
mergedData <- mergedData[!is.na(mergedData$V2),]
mergedData <- mergedData[order(-mergedData$V2),]
mergedData = merge(gdp,fedstats,by.x="V1",by.y="CountryCode",all=TRUE)
View(mergedData)
mergedData <- mergedData[!is.na(mergedData$Special.Notes),]
mergedData = merge(gdp,fedstats,by.x="V1",by.y="CountryCode",all=TRUE)
special.notes <- mergedData$Special.Notes[!is.na(mergedData$Special.Notes),]
special.notes <- mergedData[!is.na(mergedData$Special.Notes),]["Special.Notes"]
View(special.notes)
View(special.notes)
grep("^Fiscal year end: June", special.notes$Special.Notes)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
grep("^2012",amzn$row.names)
View(amzn)
amzn = getSymbols("AMZN",auto.assign=FALSE)
View(amzn)
table(grep("^Fiscal year end: June", special.notes$Special.Notes))
table(grepl("^Fiscal year end: June", special.notes$Special.Notes))
library(quantmod)
amzn <- getSymbols("AMZN",auto.assign=FALSE)
sampleTimes <- index(amzn)
View(amzn)
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
grep("^2012",amzn$row.names)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mymdf <- read.csv(path2csv, stringsAsFactors=FALSE)
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package,country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version ==
| "3.1.1", country == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is_na(r_version))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cranm ip_id, package, size)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
countries = n_distinct(country),
View(by_package)
countries = n_distinct(country),
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts<-filter(pack_sum, count>679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum, unique>465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
source('~/.active-rstudio-document', echo=TRUE)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students, sex_class, count)
res <- gather(students, sex_class, count. -grade)
res <- gather(students, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data=res, col=sex_class, into =c("sex","class"))
submit()
students3
submit()
submit()
reset()
submit()
gather( class, grade, class1:class5 , na.rm= TRUE) %>%
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
?mutate
submit()
submit()
students
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status="passed")
failed <- mutate(failed, status="failed")
rbind_list(passed, failed)
sat
?select
sat
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
now()
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
ymd(25081985)
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(this_moment, hours=0, minutes=6, seconds=55)
this_moment
nyc <- now()
nyc <- now("America/New_York")
nyc
depart <- nyc +days(2)
depart
depart <- update (depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
with_tz(arrive,"Hong Kong")
?with_tz
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time <-mdy("June 17,2008", tz="Singapore")
last_time <-mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
setwd("~/coursera/03. Obtaining and Cleaning Data/project")
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/coursera/04. Exploratory Analysis")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?devices
?Devices
dev.cur()
