qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
library(ggplot2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
install.packages("ggplot2")
install.packages("slidify")
install.packages("KernSmooth")
libray(KernSmooth)
library(KernSmooth)
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
source('~/GitHub/coursera/05. Reproducible Research/Peer Assessment 2/pa2.R', echo=TRUE)
source('~/GitHub/coursera/05. Reproducible Research/Peer Assessment 2/pa2.R', echo=TRUE)
stormData$evtype %in% approved_list
approved_list <- tolower(c("Astronomical Low Tide", "Avalanche", "Blizzard", "Coastal Flood", "Cold/Wind Chill", "Debris Flow", "Dense Fog", "Dense Smoke", "Drought", "Dust Devil", "Dust Storm", "Excessive Heat", "Extreme Cold/Wind Chill", "Flash Flood", "Flood", "Frost/Freeze", "Funnel Cloud", "Freezing Fog", "Hail", "Heat", "Heavy Rain", "Heavy Snow", "High Surf", "High Wind", "Hurricane (Typhoon)", "Ice Storm", "Lake-Effect Snow", "Lakeshore Flood", "Lightning", "Marine Hail", "Marine High Wind", "Marine Strong Wind", "Marine Thunderstorm Wind", "Rip Current", "Seiche", "Sleet", "Storm Surge/Tide", "Strong Wind", "Thunderstorm Wind", "Tornado", "Tropical Depression", "Tropical Storm", "Tsunami", "Volcanic Ash", "Waterspout", "Wildfire", "Winter Storm", "Winter Weather"))
stormData$evtype %in% approved_list
sum(stormData$evtype %in% approved_list)
View(casualties)
sum(tolower(stormData$evtype) %in% approved_list)
not_in_list <- !tolower(stormData$evtype) %in% approved_list
names(stormData)
?select()
?subset
stormData <- subset(stormData, select= c("evtype", "fatalities", "injuries", "propdmg", "propdmgexp", "cropdmg", "cropdmgexp"))
stormData <- stormData[tolower(stormData$evtype) %in% approved_list]
match_char <- c("K", "M", "B")
exp10 <- 10 ^ c(3, 6, 9, 0)
stormData <- mutate(stormData, casualties = fatalities + injuries,
propdmg = propdmg * exp10[match(propdmgexp, match_char, nomatch=4)],
cropdmg = cropdmg * exp10[match(cropdmgexp, match_char, nomatch=4)],
econdmg = propdmg + cropdmg,
evtype = tolower(evtype)
)
stormData <- stormData[stormData$evtype %in% approved_list]
relevant <- subset(stormData, econdmg!=0 | casualties!=0, select=c("evtype", "fatalities", "injuries", "casualties", "propdmg", "cropdmg", "evtype"))
relevant_melt <- melt(relevant, id="evtype")
ggplot(data=relevant_melt, aes(x=reorder(evtype, -value), y=value)) +
geom_bar(stat="identity") +
facet_grid(variable ~ .) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Number affected (Pax)")
head(relevant)
View(relevant)
relevant <- subset(stormData, econdmg!=0 | casualties!=0,
select=c("evtype", "fatalities", "injuries", "casualties", "propdmg", "cropdmg"))
View(relevant)
relevant <- subset(stormData, econdmg!=0 | casualties!=0,
select=c("evtype", "fatalities", "injuries", "casualties", "propdmg", "cropdmg", "econdmg"))
View(relevant)
?ddply
relevant_sum <- ddply(relevant, .(evtype), colwise(sum))
View(relevant_sum)
relevant_sum <- ddply(relevant[,-1], .(evtype), colwise(sum))
relevant_melt <- melt(relevant_sum, id="evtype")
png("pophealth.png", width= 800, height=640)
ggplot(data=relevant_melt, aes(x=reorder(evtype, -value), y=value)) +
geom_bar(stat="identity") +
facet_grid(variable ~ .) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Number affected (Pax)")
dev.off()
ggplot(data=subset(relevant_melt, variable %in% c("fatalties", "injuries")), aes(x=reorder(evtype, -value), y=value/1000)) +
geom_bar(stat="identity") +
facet_grid(variable ~ .) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Number affected (Pax '000s)")
dev.off()
png("pophealth.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("fatalties", "injuries")),
aes(x=reorder(evtype, -value), y=value/1000)) +
geom_bar(stat="identity") +
facet_grid(variable ~ .) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Number affected (Pax '000s)")
dev.off()
View(relevant_melt)
png("pophealth.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value), y=value/1000)) +
geom_bar(stat="identity") +
facet_grid(variable ~ .) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Number affected (Pax '000s)")
dev.off()
png("pophealth.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value), y=value/1000)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Number affected (Pax '000s)")
dev.off()
png("pophealth.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)")
dev.off()
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000)) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)")
dev.off()
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, desc(value), sum))) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)")
dev.off()
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, -value, sum))) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)")
png("pophealth.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, -value, sum))) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)")
dev.off()
View(relevant_melt)
png("econ.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("propdmg", "cropdmg")),
aes(x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, -value, sum))) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Crop", "Property"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Damages ($'000s)") +
main("Total Monetary Damage by event type (approved list)")
dev.off()
png("pophealth.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000), fill = reorder(variable, -value, sum),
main ="Total Number of Casualties by event type (approved list)") +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)")
dev.off()
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, -value, sum),
main ="Total Number of Casualties by event type (approved list)") +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)")
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, -value, sum)),
main ="Total Number of Casualties by event type (approved list)") +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)")
png("pophealth.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, -value, sum)),
main ="Total Number of Casualties by event type (approved list)") +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)")
dev.off()
ggplot(data = subset(relevant_melt, variable %in% c("propdmg", "cropdmg")),
aes(x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, -value, sum)),
main = "Total Monetary Damage by event type (approved list)") +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Crop", "Property"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Damages ($'000s)")
png("econ.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("propdmg", "cropdmg")),
aes(x=reorder(evtype, -value, sum), y=value/1000000, fill = reorder(variable, -value, sum)),
main = "Total Monetary Damage by event type (approved list)") +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Property", "Crop"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Damages ($'000,000s)")
dev.off()
ggplot(data = subset(relevant_melt, variable %in% c("propdmg", "cropdmg")),
aes(x=reorder(evtype, -value, sum), y=value/10^9, fill = reorder(variable, -value, sum)),
main = "Total Monetary Damage by event type (approved list)") +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Property", "Crop"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Damages (US$ billions)")
png("econ.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("propdmg", "cropdmg")),
aes(x=reorder(evtype, -value, sum), y=value/10^9, fill = reorder(variable, -value, sum)),
main = "Total Monetary Damage by event type (approved list)") +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Property", "Crop"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Damages (US$ billions)")
dev.off()
ggplot(data = subset(relevant_melt, variable %in% c("propdmg", "cropdmg")),
aes(x=reorder(evtype, -value, sum), y=value/10^9, fill = reorder(variable, -value, sum),
main = "Total Monetary Damage by event type (approved list)")) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Property", "Crop"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Damages (US$ billions)")
ggplot(data = subset(relevant_melt, variable %in% c("propdmg", "cropdmg")),
aes(x=reorder(evtype, -value, sum), y=value/10^9, fill = reorder(variable, -value, sum),
main = "Total Monetary Damage by event type (approved list)")) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Property", "Crop"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Damages (US$ billions)") +
title("ABC")
png("pophealth.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, -value, sum))) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)") +
ggtitle("Total Number of Casualties by event type (approved list)")
dev.off()
png("econ.png", width= 800, height=640)
ggplot(data = subset(relevant_melt, variable %in% c("propdmg", "cropdmg")),
aes(x=reorder(evtype, -value, sum), y=value/10^9, fill = reorder(variable, -value, sum))) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Property", "Crop"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Damages (US$ billions)") +
ggtitle("Total Monetary Damage by event type (approved list)")
dev.off()
png("pophealth.png", width= 867, height=600)
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, -value, sum))) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)") +
ggtitle("Total Number of Casualties by event type (approved list)")
dev.off()
png("econ.png", width= 867, height=600)
ggplot(data = subset(relevant_melt, variable %in% c("propdmg", "cropdmg")),
aes(x=reorder(evtype, -value, sum), y=value/10^9, fill = reorder(variable, -value, sum))) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Property", "Crop"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Event Type") +
ylab("Damages (US$ billions)") +
ggtitle("Total Monetary Damage by event type (approved list)")
dev.off()
png("pophealth.png", width= 867, height=600)
ggplot(data = subset(relevant_melt, variable %in% c("fatalities", "injuries")),
aes(x=reorder(evtype, -value, sum), y=value/1000, fill = reorder(variable, -value, sum))) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Injuries", "Fatalities"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Event Type") +
ylab("Casualties ('000s)") +
ggtitle("Total Number of Casualties by event type (approved list)")
dev.off()
png("econ.png", width= 867, height=600)
ggplot(data = subset(relevant_melt, variable %in% c("propdmg", "cropdmg")),
aes(x=reorder(evtype, -value, sum), y=value/10^9, fill = reorder(variable, -value, sum))) +
geom_bar(stat="identity") +
scale_fill_discrete("", labels = c("Property", "Crop"), guide = guide_legend(rev = T)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("Event Type") +
ylab("Damages (US$ billions)") +
ggtitle("Total Monetary Damage by event type (approved list)")
dev.off()
source('~/GitHub/coursera/05. Reproducible Research/Peer Assessment 2/pa2.R', echo=TRUE)
library("RCurl", lib.loc="C:/Program Files/R/R-3.1.1/library")
